apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: build-and-push
  namespace: argocd
spec:
  entrypoint: build-and-push
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  templates:
  - name: build-and-push
    steps:
    - - name: git-clone
        template: git-clone
      - name: build-image
        template: build-image
        arguments:
          parameters:
            - name: TAG
              value: "{{steps.git-clone.outputs.parameters.TAG}}"
      - name: deploy
        template: deploy
        arguments:
          parameters:
            - name: TAG
              value: "{{steps.git-clone.outputs.parameters.TAG}}"  # Use the tag from git-clone step

  - name: git-clone
    outputs:
      parameters:
        - name: TAG
          valueFrom:
            path: "/mnt/vol/TAG.txt"
    container:
      image: alpine/git
      command: ["/bin/sh", "-c"]
      args:
        - |
	  rm -rf /mnt/vol && \
          git clone https://github.com/sylvainkalache/deploy-buildpack-containerized-python-app-to-argo.git /mnt/vol/ && \
          cd /mnt/vol && \
          TAG=$(git describe --tags --always) && \
          echo $TAG > /mnt/vol/TAG.txt
      volumeMounts:
        - name: workdir
          mountPath: /mnt/vol

  - name: build-image
    inputs:
      parameters:
        - name: TAG
    container:
      image: buildpacksio/pack
      command: ["pack", "build", "172.31.17.128:5000/my-python-app:{{inputs.parameters.TAG}}", "--path", "/mnt/vol/", "--builder", "paketobuildpacks/builder-jammy-base", "--publish", "--network", "host"]
      volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
        - name: workdir
          mountPath: /mnt/vol
      securityContext:
        privileged: true

  - name: deploy
    inputs:
      parameters:
        - name: TAG
    resource:
      action: apply
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: my-python-app
        spec:
          replicas: 1
          template:
            spec:
              containers:
              - name: my-python-app
                image: 172.31.17.128:5000/my-python-app:{{inputs.parameters.TAG}}

  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock

